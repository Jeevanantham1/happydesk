{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { CLEAR_BOARD, GET_BOARDS, GET_BOARD, ADD_BOARD, BOARD_ERROR, RENAME_BOARD, GET_LIST, ADD_LIST, RENAME_LIST, ARCHIVE_LIST, GET_CARD, ADD_CARD, EDIT_CARD, MOVE_CARD, ARCHIVE_CARD, DELETE_CARD, GET_ACTIVITY, ADD_MEMBER, MOVE_LIST, ADD_CARD_MEMBER, ADD_CHECKLIST_ITEM, EDIT_CHECKLIST_ITEM, COMPLETE_CHECKLIST_ITEM, DELETE_CHECKLIST_ITEM } from './types';\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\n// Get boards\nexport const getBoards = () => async dispatch => {\n  try {\n    dispatch({\n      type: CLEAR_BOARD\n    });\n    const res = await axios.get('/api/boards');\n    dispatch({\n      type: GET_BOARDS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Get board\nexport const getBoard = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/boards/${id}`);\n    if (res) {\n      axios.defaults.headers.common['boardId'] = id;\n    } else {\n      delete axios.defaults.headers.common['boardId'];\n    }\n    dispatch({\n      type: GET_BOARD,\n      payload: {\n        ...res.data,\n        listObjects: [],\n        cardObjects: []\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add board\nexport const addBoard = (formData, history) => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.post('/api/boards', body, config);\n    dispatch({\n      type: ADD_BOARD,\n      payload: res.data\n    });\n    dispatch(setAlert('Board Created', 'success'));\n    history.push(`/board/${res.data._id}`);\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Rename board\nexport const renameBoard = (boardId, formData) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/boards/rename/${boardId}`, formData, config);\n    dispatch({\n      type: RENAME_BOARD,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Get list\nexport const getList = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/lists/${id}`);\n    dispatch({\n      type: GET_LIST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add list\nexport const addList = formData => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.post('/api/lists', body, config);\n    dispatch({\n      type: ADD_LIST,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Rename list\nexport const renameList = (listId, formData) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/lists/rename/${listId}`, formData, config);\n    dispatch({\n      type: RENAME_LIST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Archive/Unarchive list\nexport const archiveList = (listId, archive) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/lists/archive/${archive}/${listId}`);\n    dispatch({\n      type: ARCHIVE_LIST,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Get card\nexport const getCard = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/cards/${id}`);\n    dispatch({\n      type: GET_CARD,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add card\nexport const addCard = formData => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.post('/api/cards', body, config);\n    dispatch({\n      type: ADD_CARD,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Edit card\nexport const editCard = (cardId, formData) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/cards/edit/${cardId}`, formData, config);\n    dispatch({\n      type: EDIT_CARD,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Move card\nexport const moveCard = (cardId, formData) => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.patch(`/api/cards/move/${cardId}`, body, config);\n    dispatch({\n      type: MOVE_CARD,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Archive/Unarchive card\nexport const archiveCard = (cardId, archive) => async dispatch => {\n  try {\n    const res = await axios.patch(`/api/cards/archive/${archive}/${cardId}`);\n    dispatch({\n      type: ARCHIVE_CARD,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete card\nexport const deleteCard = (listId, cardId) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/cards/${listId}/${cardId}`);\n    dispatch({\n      type: DELETE_CARD,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Get activity\nexport const getActivity = () => async dispatch => {\n  try {\n    const boardId = axios.defaults.headers.common['boardId'];\n    const res = await axios.get(`/api/boards/activity/${boardId}`);\n    dispatch({\n      type: GET_ACTIVITY,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add member\nexport const addMember = userId => async dispatch => {\n  try {\n    const res = await axios.put(`/api/boards/addMember/${userId}`);\n    dispatch({\n      type: ADD_MEMBER,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Move list\nexport const moveList = (listId, formData) => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.patch(`/api/lists/move/${listId}`, body, config);\n    dispatch({\n      type: MOVE_LIST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add card member\nexport const addCardMember = formData => async dispatch => {\n  try {\n    const {\n      add,\n      cardId,\n      userId\n    } = formData;\n    const res = await axios.put(`/api/cards/addMember/${add}/${cardId}/${userId}`);\n    dispatch({\n      type: ADD_CARD_MEMBER,\n      payload: res.data\n    });\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Add checklist item\nexport const addChecklistItem = (cardId, formData) => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.post(`/api/checklists/${cardId}`, body, config);\n    dispatch({\n      type: ADD_CHECKLIST_ITEM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Edit checklist item\nexport const editChecklistItem = (cardId, itemId, formData) => async dispatch => {\n  try {\n    const body = JSON.stringify(formData);\n    const res = await axios.patch(`/api/checklists/${cardId}/${itemId}`, body, config);\n    dispatch({\n      type: EDIT_CHECKLIST_ITEM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Complete/Uncomplete checklist item\nexport const completeChecklistItem = formData => async dispatch => {\n  try {\n    const {\n      cardId,\n      complete,\n      itemId\n    } = formData;\n    const res = await axios.patch(`/api/checklists/${cardId}/${complete}/${itemId}`);\n    dispatch({\n      type: COMPLETE_CHECKLIST_ITEM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// Delete checklist item\nexport const deleteChecklistItem = (cardId, itemId) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/checklists/${cardId}/${itemId}`);\n    dispatch({\n      type: DELETE_CHECKLIST_ITEM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","setAlert","CLEAR_BOARD","GET_BOARDS","GET_BOARD","ADD_BOARD","BOARD_ERROR","RENAME_BOARD","GET_LIST","ADD_LIST","RENAME_LIST","ARCHIVE_LIST","GET_CARD","ADD_CARD","EDIT_CARD","MOVE_CARD","ARCHIVE_CARD","DELETE_CARD","GET_ACTIVITY","ADD_MEMBER","MOVE_LIST","ADD_CARD_MEMBER","ADD_CHECKLIST_ITEM","EDIT_CHECKLIST_ITEM","COMPLETE_CHECKLIST_ITEM","DELETE_CHECKLIST_ITEM","config","headers","getBoards","dispatch","type","res","get","payload","data","err","msg","response","statusText","status","getBoard","id","defaults","common","listObjects","cardObjects","addBoard","formData","history","body","JSON","stringify","post","push","_id","renameBoard","boardId","patch","getActivity","getList","addList","renameList","listId","archiveList","archive","getCard","addCard","editCard","cardId","moveCard","archiveCard","deleteCard","delete","addMember","userId","put","moveList","addCardMember","add","addChecklistItem","editChecklistItem","itemId","completeChecklistItem","complete","deleteChecklistItem"],"sources":["C:/Users/jeeva/OneDrive/Documents/Happydesk/client/src/actions/board.js"],"sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  CLEAR_BOARD,\n  GET_BOARDS,\n  GET_BOARD,\n  ADD_BOARD,\n  BOARD_ERROR,\n  RENAME_BOARD,\n  GET_LIST,\n  ADD_LIST,\n  RENAME_LIST,\n  ARCHIVE_LIST,\n  GET_CARD,\n  ADD_CARD,\n  EDIT_CARD,\n  MOVE_CARD,\n  ARCHIVE_CARD,\n  DELETE_CARD,\n  GET_ACTIVITY,\n  ADD_MEMBER,\n  MOVE_LIST,\n  ADD_CARD_MEMBER,\n  ADD_CHECKLIST_ITEM,\n  EDIT_CHECKLIST_ITEM,\n  COMPLETE_CHECKLIST_ITEM,\n  DELETE_CHECKLIST_ITEM,\n} from './types';\n\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n  },\n};\n\n// Get boards\nexport const getBoards = () => async (dispatch) => {\n  try {\n    dispatch({ type: CLEAR_BOARD });\n\n    const res = await axios.get('/api/boards');\n\n    dispatch({\n      type: GET_BOARDS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get board\nexport const getBoard = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/boards/${id}`);\n\n    if (res) {\n      axios.defaults.headers.common['boardId'] = id;\n    } else {\n      delete axios.defaults.headers.common['boardId'];\n    }\n\n    dispatch({\n      type: GET_BOARD,\n      payload: { ...res.data, listObjects: [], cardObjects: [] },\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add board\nexport const addBoard = (formData, history) => async (dispatch) => {\n  try {\n    const body = JSON.stringify(formData);\n\n    const res = await axios.post('/api/boards', body, config);\n\n    dispatch({\n      type: ADD_BOARD,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Board Created', 'success'));\n\n    history.push(`/board/${res.data._id}`);\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Rename board\nexport const renameBoard = (boardId, formData) => async (dispatch) => {\n  try {\n    const res = await axios.patch(`/api/boards/rename/${boardId}`, formData, config);\n\n    dispatch({\n      type: RENAME_BOARD,\n      payload: res.data,\n    });\n\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get list\nexport const getList = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/lists/${id}`);\n\n    dispatch({\n      type: GET_LIST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add list\nexport const addList = (formData) => async (dispatch) => {\n  try {\n    const body = JSON.stringify(formData);\n\n    const res = await axios.post('/api/lists', body, config);\n\n    dispatch({\n      type: ADD_LIST,\n      payload: res.data,\n    });\n\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Rename list\nexport const renameList = (listId, formData) => async (dispatch) => {\n  try {\n    const res = await axios.patch(`/api/lists/rename/${listId}`, formData, config);\n\n    dispatch({\n      type: RENAME_LIST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Archive/Unarchive list\nexport const archiveList = (listId, archive) => async (dispatch) => {\n  try {\n    const res = await axios.patch(`/api/lists/archive/${archive}/${listId}`);\n\n    dispatch({\n      type: ARCHIVE_LIST,\n      payload: res.data,\n    });\n\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get card\nexport const getCard = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/cards/${id}`);\n\n    dispatch({\n      type: GET_CARD,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add card\nexport const addCard = (formData) => async (dispatch) => {\n  try {\n    const body = JSON.stringify(formData);\n\n    const res = await axios.post('/api/cards', body, config);\n\n    dispatch({\n      type: ADD_CARD,\n      payload: res.data,\n    });\n\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Edit card\nexport const editCard = (cardId, formData) => async (dispatch) => {\n  try {\n    const res = await axios.patch(`/api/cards/edit/${cardId}`, formData, config);\n\n    dispatch({\n      type: EDIT_CARD,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Move card\nexport const moveCard = (cardId, formData) => async (dispatch) => {\n  try {\n    const body = JSON.stringify(formData);\n\n    const res = await axios.patch(`/api/cards/move/${cardId}`, body, config);\n\n    dispatch({\n      type: MOVE_CARD,\n      payload: res.data,\n    });\n\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Archive/Unarchive card\nexport const archiveCard = (cardId, archive) => async (dispatch) => {\n  try {\n    const res = await axios.patch(`/api/cards/archive/${archive}/${cardId}`);\n\n    dispatch({\n      type: ARCHIVE_CARD,\n      payload: res.data,\n    });\n\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete card\nexport const deleteCard = (listId, cardId) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/cards/${listId}/${cardId}`);\n\n    dispatch({\n      type: DELETE_CARD,\n      payload: res.data,\n    });\n\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get activity\nexport const getActivity = () => async (dispatch) => {\n  try {\n    const boardId = axios.defaults.headers.common['boardId'];\n\n    const res = await axios.get(`/api/boards/activity/${boardId}`);\n\n    dispatch({\n      type: GET_ACTIVITY,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add member\nexport const addMember = (userId) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/boards/addMember/${userId}`);\n\n    dispatch({\n      type: ADD_MEMBER,\n      payload: res.data,\n    });\n\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Move list\nexport const moveList = (listId, formData) => async (dispatch) => {\n  try {\n    const body = JSON.stringify(formData);\n\n    const res = await axios.patch(`/api/lists/move/${listId}`, body, config);\n\n    dispatch({\n      type: MOVE_LIST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add card member\nexport const addCardMember = (formData) => async (dispatch) => {\n  try {\n    const { add, cardId, userId } = formData;\n\n    const res = await axios.put(`/api/cards/addMember/${add}/${cardId}/${userId}`);\n\n    dispatch({\n      type: ADD_CARD_MEMBER,\n      payload: res.data,\n    });\n\n    dispatch(getActivity());\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add checklist item\nexport const addChecklistItem = (cardId, formData) => async (dispatch) => {\n  try {\n    const body = JSON.stringify(formData);\n\n    const res = await axios.post(`/api/checklists/${cardId}`, body, config);\n\n    dispatch({\n      type: ADD_CHECKLIST_ITEM,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Edit checklist item\nexport const editChecklistItem = (cardId, itemId, formData) => async (dispatch) => {\n  try {\n    const body = JSON.stringify(formData);\n\n    const res = await axios.patch(`/api/checklists/${cardId}/${itemId}`, body, config);\n\n    dispatch({\n      type: EDIT_CHECKLIST_ITEM,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Complete/Uncomplete checklist item\nexport const completeChecklistItem = (formData) => async (dispatch) => {\n  try {\n    const { cardId, complete, itemId } = formData;\n\n    const res = await axios.patch(`/api/checklists/${cardId}/${complete}/${itemId}`);\n\n    dispatch({\n      type: COMPLETE_CHECKLIST_ITEM,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete checklist item\nexport const deleteChecklistItem = (cardId, itemId) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/checklists/${cardId}/${itemId}`);\n\n    dispatch({\n      type: DELETE_CHECKLIST_ITEM,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: BOARD_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}