{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Register User\nexport const register = _ref => {\n  let {\n    name,\n    email,\n    password\n  } = _ref;\n  return async dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      name,\n      email,\n      password\n    });\n    try {\n      const res = await axios.post('/api/users', body, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      dispatch(loadUser());\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n      }\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n  };\n};\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// Logout\nexport const logout = () => async dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","register","_ref","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg","login","logout"],"sources":["C:/Users/jeeva/OneDrive/Documents/Happydesk/client/src/actions/auth.js"],"sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Load User\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// Register User\nexport const register = ({ name, email, password }) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\n// Login User\nexport const login = (email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\n// Logout\nexport const logout = () => async (dispatch) => {\n  dispatch({ type: LOGOUT });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}