{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeeva\\\\OneDrive\\\\Documents\\\\Happydesk\\\\client\\\\src\\\\components\\\\card\\\\MoveCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { moveCard } from '../../actions/board';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport useStyles from '../../utils/modalStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoveCard = _ref => {\n  _s();\n  let {\n    cardId,\n    setOpen,\n    thisList\n  } = _ref;\n  const classes = useStyles();\n  const [listObject, setListObject] = useState(null);\n  const [listTitle, setListTitle] = useState('');\n  const [position, setPosition] = useState(0);\n  const [positions, setPositions] = useState([0]);\n  const lists = useSelector(state => state.board.board.lists);\n  const listObjects = useSelector(state => state.board.board.listObjects.sort((a, b) => lists.findIndex(id => id === a._id) - lists.findIndex(id => id === b._id)).filter(list => !list.archived));\n  const cardObjects = useSelector(state => state.board.board.cardObjects);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setListObject(thisList);\n    setListTitle(thisList.title);\n  }, [thisList, cardId]);\n  useEffect(() => {\n    if (listObject) {\n      const unarchivedListCards = listObject.cards.map((id, index) => {\n        const card = cardObjects.find(object => object._id === id);\n        const position = index;\n        return {\n          card,\n          position\n        };\n      }).filter(card => !card.card.archived);\n      let cardPositions = unarchivedListCards.map(card => card.position);\n      if (listObject !== thisList) {\n        cardPositions = cardPositions.concat(listObject.cards.length);\n      }\n      if (listObject.cards.length > 0) {\n        setPositions(cardPositions);\n        setPosition(thisList.cards.findIndex(id => id === cardId));\n      } else {\n        setPositions([0]);\n        setPosition(0);\n      }\n    }\n  }, [thisList, cardId, listObject, cardObjects]);\n  const onSubmit = async () => {\n    dispatch(moveCard(cardId, {\n      fromId: thisList._id,\n      toId: listObject._id,\n      toIndex: position\n    }));\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.moveCard,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: classes.moveCardTitle,\n      children: \"Move this card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.moveCardSelect,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          shrink: true,\n          children: \"List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: listTitle,\n          required: true,\n          onChange: e => {\n            setListTitle(e.target.value);\n            setListObject(listObjects.find(list => list.title === e.target.value));\n          },\n          displayEmpty: true,\n          children: listObjects.map(list => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: list.title,\n            children: list.title\n          }, list._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.moveCardSelect,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          shrink: true,\n          children: \"Position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: position,\n          required: true,\n          onChange: e => setPosition(e.target.value),\n          displayEmpty: true,\n          children: positions.map((position, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: position,\n            children: index + 1\n          }, position, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.button,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: onSubmit,\n      children: \"Move Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(MoveCard, \"r6ViqGIIt3kza72LjozHLnzJIA0=\", false, function () {\n  return [useStyles, useSelector, useSelector, useSelector, useDispatch];\n});\n_c = MoveCard;\nMoveCard.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  thisList: PropTypes.object.isRequired\n};\nexport default MoveCard;\nvar _c;\n$RefreshReg$(_c, \"MoveCard\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","PropTypes","moveCard","Button","InputLabel","MenuItem","FormControl","Select","useStyles","jsxDEV","_jsxDEV","MoveCard","_ref","_s","cardId","setOpen","thisList","classes","listObject","setListObject","listTitle","setListTitle","position","setPosition","positions","setPositions","lists","state","board","listObjects","sort","a","b","findIndex","id","_id","filter","list","archived","cardObjects","dispatch","title","unarchivedListCards","cards","map","index","card","find","object","cardPositions","concat","length","onSubmit","fromId","toId","toIndex","className","children","moveCardTitle","fileName","_jsxFileName","lineNumber","columnNumber","moveCardSelect","shrink","value","required","onChange","e","target","displayEmpty","button","variant","color","onClick","_c","propTypes","string","isRequired","func","$RefreshReg$"],"sources":["C:/Users/jeeva/OneDrive/Documents/Happydesk/client/src/components/card/MoveCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { moveCard } from '../../actions/board';\n\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport useStyles from '../../utils/modalStyles';\n\nconst MoveCard = ({ cardId, setOpen, thisList }) => {\n  const classes = useStyles();\n  const [listObject, setListObject] = useState(null);\n  const [listTitle, setListTitle] = useState('');\n  const [position, setPosition] = useState(0);\n  const [positions, setPositions] = useState([0]);\n  const lists = useSelector((state) => state.board.board.lists);\n  const listObjects = useSelector((state) =>\n    state.board.board.listObjects\n      .sort(\n        (a, b) =>\n          lists.findIndex((id) => id === a._id) - lists.findIndex((id) => id === b._id)\n      )\n      .filter((list) => !list.archived)\n  );\n  const cardObjects = useSelector((state) => state.board.board.cardObjects);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setListObject(thisList);\n    setListTitle(thisList.title);\n  }, [thisList, cardId]);\n\n  useEffect(() => {\n    if (listObject) {\n      const unarchivedListCards = listObject.cards\n        .map((id, index) => {\n          const card = cardObjects.find((object) => object._id === id);\n          const position = index;\n          return { card, position };\n        })\n        .filter((card) => !card.card.archived);\n      let cardPositions = unarchivedListCards.map((card) => card.position);\n      if (listObject !== thisList) {\n        cardPositions = cardPositions.concat(listObject.cards.length);\n      }\n      if (listObject.cards.length > 0) {\n        setPositions(cardPositions);\n        setPosition(thisList.cards.findIndex((id) => id === cardId));\n      } else {\n        setPositions([0]);\n        setPosition(0);\n      }\n    }\n  }, [thisList, cardId, listObject, cardObjects]);\n\n  const onSubmit = async () => {\n    dispatch(\n      moveCard(cardId, { fromId: thisList._id, toId: listObject._id, toIndex: position })\n    );\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.moveCard}>\n      <h3 className={classes.moveCardTitle}>Move this card</h3>\n      <div>\n        <FormControl className={classes.moveCardSelect}>\n          <InputLabel shrink>List</InputLabel>\n          <Select\n            value={listTitle}\n            required\n            onChange={(e) => {\n              setListTitle(e.target.value);\n              setListObject(listObjects.find((list) => list.title === e.target.value));\n            }}\n            displayEmpty\n          >\n            {listObjects.map((list) => (\n              <MenuItem key={list._id} value={list.title}>\n                {list.title}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.moveCardSelect}>\n          <InputLabel shrink>Position</InputLabel>\n          <Select\n            value={position}\n            required\n            onChange={(e) => setPosition(e.target.value)}\n            displayEmpty\n          >\n            {positions.map((position, index) => (\n              <MenuItem key={position} value={position}>\n                {index + 1}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      <Button\n        className={classes.button}\n        variant='contained'\n        color='primary'\n        onClick={onSubmit}\n      >\n        Move Card\n      </Button>\n    </div>\n  );\n};\n\nMoveCard.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  thisList: PropTypes.object.isRequired,\n};\n\nexport default MoveCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}